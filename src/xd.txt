@Override
    public Iterator iterator() {
        Iterator it = new Iterator<>() {
            private Dzial current = root;
            private List<Dzial> currents = null;

            @Override
            public boolean hasNext() {
                return current.getChildren() != null;
            }

            @Override
            public void remove() {
                throw new UnsupportedOperationException();
            }

            @Override
            public Dzial next() {
                if (!hasNext()) {
                    throw new NoSuchElementException();
                }
                String nazwa = current.getNazwa();
                int counter = 0;
                if (current.getChildren() != null) {
                    while (current.getChildren() != null) {
                        counter++;
                        if (current.getChildren().get(0) == null) {
                            System.out.println("dupa" + counter);
                            return current;
                        }
                        for (Dzial i : current.getChildren()) {
                            nazwa = i.getNazwa();
                            //System.out.println(nazwa);
                        }
                        current = current.getChildren().get(0);
                        if (current.getChildren().get(0) == null) {
                            System.out.println("nie by≈Ço dzieci");
                            break;
                        }
                    }
                }
                return current;
            }
        };
        return it;
    }